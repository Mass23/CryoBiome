"""
Author: Susheel Bhanu BUSI
Affiliation: ESB group LCSB UniLU
Date: [2019-06-02]
Run: snakemake -s metag_preprocessing_snakefile --use-conda --cores 10 -rp
Latest modification:
"""

import os
import glob
import pandas 

configfile:"config.yaml"
DATA_DIR=config['data_dir']
RESULTS_DIR=config['results_dir']
SAMPLES=[line.strip() for line in open("sample_list", 'r')]	# if using a sample list instead of putting them in a config file
# SAMPLES=config['samples']


###########
rule all: 
		input: 
			expand(os.path.join(DATA_DIR, "IMP3/{sample}/{sample}_Pool1_R{read}.fastq.gz"), read=["1", "2"], sample=SAMPLES),
			expand(os.path.join(DATA_DIR, "IMP3/{sample}/{sample}_config.yaml"), sample=SAMPLES),
			expand(os.path.join(DATA_DIR, "IMP3/{sample}/launchIMP.sh"), sample=SAMPLES),
			expand(os.path.join(DATA_DIR, "IMP3/{sample}/{sample}.runIMP.sh"), sample=SAMPLES),
			expand(os.path.join(DATA_DIR, "IMP3/{sample}/run1/status/all.done"), sample=SAMPLES)

################################
# rules for files and analyses #
################################
rule folders:
		input:
			in1=os.path.join(DATA_DIR, "IMP3/{sample}_Pool1_R1.fastq.gz"),
			in2=os.path.join(DATA_DIR, "IMP3/{sample}_Pool1_R2.fastq.gz")
		output:	
			fout1=os.path.join(DATA_DIR, "IMP3/{sample}/{sample}_Pool1_R1.fastq.gz"),
			fout2=os.path.join(DATA_DIR, "IMP3/{sample}/{sample}_Pool1_R2.fastq.gz")
		shell:	"""
			date &&\
			mv -v {input.in1} {output.fout1} && mv -v {input.in2} {output.fout2} &&\
			date
			"""

rule imp_files:
		output:
			tout1=os.path.join(DATA_DIR, "IMP3/{sample}/{sample}_config.yaml"),
                        tout2=os.path.join(DATA_DIR, "IMP3/{sample}/launchIMP.sh"),
                        tout3=os.path.join(DATA_DIR, "IMP3/{sample}/{sample}.runIMP.sh")
		shell:	"""
			date &&\
			cp -v IMP_config.yaml {output.tout1} && cp -v launchIMP.sh {output.tout2} && cp -v runIMP.sh {output.tout3} &&\
			sed -i 's/\"\$sample\"/{wildcards.sample}/g' {output.tout1} &&\
			sed -i 's/\"\$sample\"/{wildcards.sample}/g' {output.tout2} &&\
			sed -i 's/\"\$sample\"/{wildcards.sample}/g' {output.tout3} &&\
			date
			"""

rule imp_launch:
		input:
			l1=os.path.join(DATA_DIR, "IMP3/{sample}")
		output:
			lout1=os.path.join(DATA_DIR, "IMP3/{sample}/run1/status/all.done"),
			lout2=os.path.join(DATA_DIR, "IMP3/{sample}/run1/Assembly/mg.assembly.merged.fa"),
			lout3=os.path.join(DATA_DIR, "IMP3/{sample}/run1/Preprocessing/mg.r1.trimmed.hg38_filtered.fq"),
			lout4=os.path.join(DATA_DIR, "IMP3/{sample}/run1/Preprocessing/mg.r2.trimmed.hg38_filtered.fq")
		threads:config["threads"]
		shell:	"""
			date
			chmod -R 775 {input.l1} && cd {input.l1} 
			IMPROOT="/work/projects/ecosystem_biology/local_tools/IMP3"
			snakemake -s $IMPROOT/Snakefile --configfile {wildcards.sample}_config.yaml --cores {threads} --use-conda --conda-prefix $IMPROOT/conda --unlock
			snakemake -s $IMPROOT/Snakefile --configfile {wildcards.sample}_config.yaml --cores {threads} --use-conda --conda-prefix $IMPROOT/conda
			date
			"""

#rule decompress:
#		input:	os.path.join(DATA_DIR, "IMP3/{sample}/run1/Assembly/intermediary.tar.gz")
#		output:	os.path.join(DATA_DIR, "IMP3/{sample}/run1/Assembly/intermediary/mg.megahit_preprocessed.1/options.json")
#		shell:	"""
#			date &&\
#			tar -xzvf {input} -C $(dirname {input}) &&\
#			date
#			"""
#
#rule copy_updated_config:
#		output:	os.path.join(DATA_DIR, "IMP3/{sample}/{sample}_config.yaml")
#		shell:	"""
#			date &&\
#			cp -v intermediary_IMP_config.yaml {output} &&\
#			sed -i 's/\"\$sample\"/{wildcards.sample}/g' {output} &&\
#			date
#			"""
